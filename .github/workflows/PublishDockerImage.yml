name: Publish Docker image
on:
  push:
    branches:
      - main   
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.103
      - name: Build with dotnet
        run: |
          dotnet build webtest1/webtest1.csproj 
          dotnet build webtest1.Tests/webtest1.Tests.csproj        
      - name: Install report generator
        run: dotnet tool install dotnet-reportgenerator-globaltool --version 4.8.12 --tool-path $DOTNET_ROOT/tools
      - name: Run Tests
        run: |
          dotnet test /p:CollectCoverage=true /p:CoverletOutput=$DOTNET_ROOT/BuildReports/Coverage/ /p:CoverletOutputFormat=cobertura 
          reportgenerator -reports:$DOTNET_ROOT/BuildReports/Coverage/coverage.cobertura.xml -targetdir:$DOTNET_ROOT/BuildReports/Coverage -reporttypes:"HTML;HTMLSummary"   
      - name: Export Artifacts
        uses: actions/upload-artifact@v2      
        with:	      
          name: Code Coverage
          path: ~/.dotnet/BuildReports/Coverage/*            
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: mgkaiser/webtest1          
          flavor: latest=false
          tags: type=raw,enable=true,prefix=Build-,value=${{ github.run_number }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./webtest1
          push: true    
          build-args: "SUFFIX=${{ github.run_number }}"      
          tags:   ${{ steps.meta.outputs.tags }} 
          labels: ${{ steps.meta.outputs.labels }}  
      - name: Update the helm chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TAGS: ${{ github.run_number }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |          
          git clone https://mgkaiser:$GITHUB_TOKEN@github.com/mgkaiser/webtest1-helm          
          git config --global user.email "mgkaiser@hotmail.com"          
          git config --global user.name "Michael Kaiser"          
          cd webtest1-helm          
          git checkout kaiserhomelab          
          cat ./values.yaml | sed 's/tag: \"latest\"/tag: \"Build-'$GITHUB_TAGS'\"/' > ./charts/webtest1/values.yaml                    
          git add ./charts/webtest1/values.yaml          
          git commit -m "Updated build number"          
          git push --set-upstream https://mgkaiser:$API_TOKEN@github.com/mgkaiser/webtest1-helm                    

